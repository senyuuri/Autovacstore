extends layout

block content
	style.
		.btn-staff{
			margin-left: 5px;
		}


		.timeline {
			list-style: none;
		}
		.timeline > li {
			margin-bottom: 60px;
		}

		.add-bottom{
			padding-bottom: 100px;
			padding-top: 15px;
		}

		.add-left{
			margin-left:10px;
		}

		.step-font{
			color: #777;
			font-family: Helvetica,Arial,sans-serif;
		}

		.product-item{
			margin-left:10px;
		}

		#btn-submit{
			margin-top:30px;
		}

		#btn-cancel{
			position:relative;
			margin-left:20px;
			
		}

		#hide{
			visibility:hidden;
		}

		h3{
			color: #777;
			font-family: Helvetica,Arial,sans-serif;
		}

		ul.dropdown-menu{
			position:relative;
			left:0px;
			bottom:0px;
			overflow-y:visible;
		}

		/* for Desktop */
		@media ( min-width : 640px ){
			.timeline > li {
				overflow: hidden;
				margin: 0;
				position: relative;
			}

			.timeline-date {
				width: 110px;
				float: left;
				margin-top: 20px;
			}

			.timeline-content {
				z-index:0;
				width: 75%;
				float: left;
				border-left: 3px #e5e5d1 solid;
				padding-left: 30px;
				
			}

			.timeline-content:before {
				content: '';
				width: 12px;
				height: 12px;
				background: #6fc173;
				position: absolute;
				left: 106px;
				top: 24px;
				border-radius: 100%;
				
			}
		}

	script(type='text/javascript').
		var count = 1;
		// products that are already in the table
		var filter = [];
		// Set dropdown text when selected 
		// IMPT: .ready function is necessary for all JQuery codes
		//   	 to avoid manipulating elements before the DOM tree is created                                               
		$(document).ready(function(err) {
			// Fill in data in edit mode
			var plist = !{JSON.stringify(plist)};

			function deleteRow(e){
				alert(e);
			};

			console.log('edit:',#{edit});
			if (#{edit}) {
				// Fill customer info
				var data = !{JSON.stringify(result)};
				//var plist = !{JSON.stringify(plist)};
				var data = data[0];
				Materialize.toast('Edit Mode (Order:'+data.tracking_id+')', 5000);
				$('#realname').val(data.customer);
				$('#contact').val(data.customer_contact);
				$('#address').val(data.customer_address);
				// Select delivery staff
				var sid = data.staff_id;
				$('#staff'+sid).attr('class','btn btn-primary btn-staff');
				$('#staff_value').val(sid);
				// Create table
				var items = data.items;
				for(var i=0;i<items.length;i++){
					var row = $("<tr id='ROW"+ count +"'>");
					var value = items[i]['qty'];
					var product = items[i]['pid'];
					var name = "PRO-"+product;
					filter.push(name);
					// Column 1: index
					row.append('<td> '+count);
					row.append('<td> '+plist[product-1]['name']);
					row.append('<td> '+value);
					row.append('<td> $'+plist[product-1]['price']);
					row.append('<td> $'+plist[product-1]['price']*value);
					var td = $("<td>");
					td.append("<i class='small mdi-action-delete' clickid='"+ count +"'"+ " id='label"+count+"'>");
					td.append("<input type='hidden' name='"+ name +"' value="+ value+">")
					// add eventlister to delete icon
					$(document).on('click', '#label'+count, function (e) {
					 	var clickid = $(this).attr('clickid');	
						$("#ROW"+clickid).remove();
						var name = $(this).parent().find('input').attr('name');
						filter.splice(filter.indexOf(name),1);
				 	});

					row.append(td);
					$('#order-table').append(row);
					// Reset quantity
					$('#quantity').val('');
					$('#hide').attr('value',0);
					count++;
				};
			};
			

			// When select a dropdown item
			$('.dropdown-menu a').click(function(){
				var selText = $(this).text();

				console.log("I'm running! Don't kill me! QAQ");
				$(this).parent().parent().find('.dropdown-toggle').text(selText);
				// Change the hidden field's 'name' attribute
				$(this).parent().find('#hide').attr('name','PRO-' + $(this).attr('tabindex'));
				$(this).parent().find('#hide').attr('product', $(this).attr('tabindex'));

			});

			// Change hidden field's value when input quantity
			$('.quantity').keyup(function(){
				$(this).parent().parent().find('.dropdown').find('.dropdown-menu').find('#hide').attr('value',$(this).val());
			});


			// Clone the DOM subtree for new rows in table
			$('#addproduct').click(function(){
				// Get values from input area
				var name = $('#hide').attr('name');
				var value = $('#hide').attr('value');
				var product = $('#hide').attr('product');
				if (product=='na'){
					alert("Please select a product.");
				}
				else if(value==0 || value==''){
					alert("Please enter a valid quantity");
				} 
				else if(filter.indexOf(name) > -1){
					alert("Product already exists.")
				}
				else{
					// Create row
					var row = $("<tr id='ROW"+ count +"'>");
					// Column 1: index
					row.append('<td> '+count);
					row.append('<td> '+plist[product-1]['name']);
					row.append('<td> '+value);
					row.append('<td> $'+plist[product-1]['price']);
					row.append('<td> $'+plist[product-1]['price']*value);
					var td = $("<td>");
					td.append("<i class='small mdi-action-delete' clickid='"+ count +"'"+ " id='label"+count+"'>");
					td.append("<input type='hidden' name='"+ name +"' value="+ value+">")
					// add eventlister to delete icon
					$(document).on('click', '#label'+count, function (e) {
					 	var clickid = $(this).attr('clickid');	
						$("#ROW"+clickid).remove();
						var name = $(this).parent().find('input').attr('name');
						filter.splice(filter.indexOf(name),1);
				 	});

					row.append(td);
					$('#order-table').append(row);
					// Reset quantity
					$('#quantity').val('');
					$('#hide').attr('value',0);
					count++;
					filter.push(name);
				}
			});

			

			// When select delivery staff
			$('#selstaff button').click(function(){
				// Reset all color
				// TODO:change color according to individual status
				$('#selstaff button').attr('class','btn btn-success btn-staff');
				// highlight selected button(blue)
				$(this).attr('class','btn btn-primary btn-staff');
				// Change value in the hidden field
				$('#selstaff input').attr('value',$(this).attr('sid'));
			});
		});
		

	div(class='container-fluid')
		//div(class='page-header')
			h1 Add Order
		form(class='form-group',method='POST',action='/addOrder'+result[0]['order_id'])
			if edit
				input(type='hidden',name='edit',value='true')
			else
				input(type='hidden',name='edit',value='false')

			ul(class="timeline")
				li
					h4(class="timeline-date step-font") Step 1
					div(class="timeline-content")
						h3 Order List
						div(class='container-fluid add-bottom')
							table(id='order-table' class="table table-hover table-stripped")
								thead
									tr
										th #
										th Product 
										th Quantity
										th Unit Price
										th Total
										th Delete
								tbody
									
										
							div(class='container-fluid')
								div(class='dropdown')
									button(class='col-md-4 btn btn-default dropdown-toggle' type='button' id='dropdownMenu1' data-toggle='dropdown' aria-expanded='true')
										|Select a product
										span(class='caret')
									ul(class='dropdown-menu' role='menu' aria-labelledby='dropdownMenu1')
										if plist
											- for (var i=0; i<plist.length; i++)
												if plist[i]['is_deleted'] != 'y'
													li(role='presentation')
													a(class='product-item' role='menuitem' tabindex=plist[i].product_id href='#')= plist[i].name
										else
											li(role='presentation')
												a(role='menuitem' tabindex='-1' href='#')
													| ERR:NO PRODUCT
										i(type='hidden',name='na',value="0",product='na',id='hide')

								div(class='form-group col-md-2')
									label(class='sr-only' for='quantity') Quantity
									input(type='number',class='form-control quantity',id='quantity',placeholder='quantity',value='')

								div(class='col-md-2')
									// Different id refers to different line! Remember to change when duplicate.
									button(type='button',class='btn btn-default',id='addproduct') Add


				li
					h4(class="timeline-date step-font") Step 2
					div(class="timeline-content")
						h3 Select Delivery Staff
						p 
						div(class='container add-bottom' id='selstaff')
							if staff
								- for (var i=0; i<staff.length; i++)
									if (staff[i].staff_id != 0)
										button(type="button",class="btn btn-success btn-staff",sid=staff[i].staff_id,id='staff'+staff[i].staff_id)= staff[i].realname
										span
								input(type='hidden',name='staff',value="0",id='staff_value')
							else
								p ERR: NO DELIVERY MAN IN RECORD

				li
					h4(class="timeline-date step-font") Step 3
					div(class="timeline-content")
						h3 Add Customer Information
						p 
						div(class='container')
							div(class='form-group col-lg-3 col-md-3')
								label(for='realname',class='control-label') Name
								input(type='text',class='form-control',name='name',placeholder='',id='realname',required='')
						div(class='container')
							div(class='form-group col-lg-3 col-md-3')
								label(class='control-label',for='contact') Contact Number
								input(type='text',class='form-control',name='contact',placeholder='',id='contact',required='')
						div(class='container')
							div(class='form-group col-lg-6 col-md-6')
								label(for='address',class='control-label') Address
								textarea(class='form-control',rows='3', name='address',id='address',required='')
						div(id='btn-submit' class='container')
							button( type='submit',class='btn btn-default add-left',value='Submit') Submit
							a(id='btn-cancel',href='/undelivered', class='add-left') Cancel



