

Initialisation (MySQL)
===================================================

CREATE TABLE IF NOT EXISTS staff
(
staff_id int NOT NULL AUTO_INCREMENT,
username varchar(20) NOT NULL UNIQUE,
password varchar(50) NOT NULL,
previlege char(1) NOT NULL,
realname varchar(30) NOT NULL,
contact varchar(10) NOT NULL,
reg_date timestamp DEFAULT CURRENT_TIMESTAMP,
de_count int NOT NULL DEFAULT 0,
PRIMARY KEY (staff_id)
);

CREATE TABLE IF NOT EXISTS products
(
product_id int NOT NULL AUTO_INCREMENT,
name varchar(50) NOT NULL,
price int NOT NULL,
available int,
PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS customers(
customer_id int NOT NULL AUTO_INCREMENT,
name varchar(30) NOT NULL,
contact varchar(10) NOT NULL,
address varchar(100) NOT NULL,
PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS orders
(
order_id int NOT NULL AUTO_INCREMENT,
tracking_id varchar(6) NOT NULL,
status char(1) NOT NULL,
created timestamp DEFAULT CURRENT_TIMESTAMP,
de_accept datetime,
de_estimate datetime,
de_staff int,
customer_id int,
is_deleted char(1),
PRIMARY KEY (order_id),
FOREIGN KEY (de_staff) REFERENCES staff(staff_id),
FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE IF NOT EXISTS items
(
order_id int NOT NULL,
product_id int NOT NULL,
qty int NOT NULL,
total int NOT NULL,
PRIMARY KEY (order_id, product_id),
FOREIGN KEY (order_id) REFERENCES orders(order_id),
FOREIGN KEY (product_id) REFERENCES products(product_id)
);


CREATE TABLE IF NOT EXISTS visitor
(
oid int NOT NULL AUTO_INCREMENT,
visit_time timestamp DEFAULT CURRENT_TIMESTAMP,
user varchar(20),
ip varchar(40),
user_agent varchar(200),
request varchar(200),
method varchar(5),
PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS operation
(
staff_id int NOT NULL, 
order_id int NOT NULL,
prev_status char(1),
curr_status char(1) NOT NULL,
time timestamp DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (order_id, staff_id),
FOREIGN KEY (order_id) REFERENCES orders(order_id),
FOREIGN KEY (staff_id) REFERENCES staff(staff_id)
);

TEST VALUES
=========================================

INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('aaa','111','d','ABB','94609879');
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('bbb','111','d','BCC','94609879');
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('ccc','111','d','CDD','94609879');
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('ddd','111','d','DEE','94609879');
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('admin','123456','a','Admin','11111111');

INSERT INTO products (name, price) VALUES ('Vac1','10');
INSERT INTO products (name, price) VALUES ('Vac2','20');
INSERT INTO products (name, price) VALUES ('Vac3','30');
INSERT INTO products (name, price) VALUES ('Vac4','40');
INSERT INTO customers (name, contact, address) VALUES (
	'pspencil',
	'12345678',
	'61 Kampong Arang Road'
);

INSERT INTO orders(tracking_id,status,de_staff,customer_id) VALUES (
	"ABCDEF",
	"r",
	(SELECT staff_id FROM staff WHERE username='aaa'),
	(SELECT customer_id FROM customers WHERE name='pspencil')
);

INSERT INTO items(order_id, product_id, qty,total) VALUES (
	(SELECT order_id FROM orders WHERE order_id = 1),
	(SELECT product_id FROM products WHERE product_id = 1),
	10,
	100
);

INSERT INTO items(order_id, product_id, qty,total) VALUES (
	(SELECT order_id FROM orders WHERE order_id = 1),
	(SELECT product_id FROM products WHERE product_id = 2),
	10,
	200
);

INSERT INTO items(order_id, product_id, qty,total) VALUES (
	(SELECT order_id FROM orders WHERE order_id = 2),
	(SELECT product_id FROM products WHERE product_id = 1),
	10,
	100
);

SELECT items.* FROM orders, items
WHERE orders.order_id = 1 and items.order_id = 1;

//Undelivered
SELECT orders.order_id, orders.tracking_id, orders.status, orders.customer_id, orders.de_staff, 
staff.realname, items.product_id, items.qty, items.total, customers.name, 
products.name AS product_name
FROM orders 
INNER JOIN items ON orders.order_id=items.order_id 
INNER JOIN customers ON orders.customer_id=customers.customer_id 
INNER JOIN staff ON orders.de_staff=staff.staff_id
INNER JOIN products ON items.product_id = products.product_id
WHERE orders.is_deleted IS NULL AND (orders.status='r' OR orders.status='p')
ORDER BY orders.order_id


//Delete order
//Mark is_deleted field as 'y'
UPDATE orders SET is_deleted='y' WHERE order_id=22;


UPDATE orders SET status='s' WHERE order_id=22;


// get order count by date
SELECT DATE(created) AS date, COUNT(order_id) AS count FROM orders WHERE is_deleted IS NULL GROUP BY DATE(created)
ORDER BY DATE(created) LIMIT 10;

// get sales
SELECT products.name AS product, SUM(items.total)
FROM items
INNER JOIN products ON items.product_id = products.product_id
GROUP BY products.name;


// get sales by date
SELECT orders.created, products.name AS product, SUM(items.total)
FROM orders
INNER JOIN items ON orders.order_id=items.order_id
INNER JOIN products ON items.product_id = products.product_id
WHERE DATE(orders.created)=  STR_TO_DATE('2015-5-23', '%Y-%m-%d')
GROUP BY products.name;

// get status log
SELECT operation.staff_id, staff.realname, operation.order_id, operation.prev_status, operation.curr_status
FROM operation
INNER JOIN staff ON operation.staff_id = staff.staff_id
ORDER BY operation.time DESC
LIMIT 10;

SELECT * FROM orders WHERE de_staff=1 AND is_deleted IS NULL ORDER BY created DESC



