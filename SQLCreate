TABLE staffs
+-----------+-------------+------+-----+-------------------+----------------+
| Field     | Type        | Null | Key | Default           | Extra          |
+-----------+-------------+------+-----+-------------------+----------------+
| staff_id  | int(11)     | NO   | PRI | NULL              | auto_increment | 
| username  | varchar(20) | NO   |     | NULL              |                |
| password  | varchar(50) | NO   |     | NULL              |                |
| reg_date  | timestamp   | NO   |     | CURRENT_TIMESTAMP |                | * registration date
| de_count  | int(11)     | NO   |     | 0                 |                | * count of successful delivery
| privilege | char(1)     | NO   |     | NULL              |                | * account type: (a)admin, (d)delivery
+-----------+-------------+------+-----+-------------------+----------------+




TABLE orders
+-------------+--------------+------+-----+-------------------+----------------+
| Field       | Type         | Null | Key | Default           | Extra          |
+-------------+--------------+------+-----+-------------------+----------------+
| order_id    | int(11)      | NO   | PRI | NULL              | auto_increment |
| tracking_id | varchar(255) | YES  |     | NULL              |                | * auto generated id for customers' references
| status      | char(1)      | NO   |     | NULL              |                | * (r)received, (p)processing, (s)success, (e)error
| created     | timestamp    | NO   |     | CURRENT_TIMESTAMP |                |
| de_accept   | datetime     | YES  |     | NULL              |                | * delivery accepted time (by staff)
| de_estimate | datetime     | YES  |     | NULL              |                | * estimated delivery time
| de_staff    | int(11)      | YES  | MUL | NULL              |                | * FOREIGN KEY, delivery staff id
            |                | * FOREIGN KEY
+-------------+--------------+------+-----+-------------------+----------------+
address
customer


TABLE item


TABLE products




TABLE log
+-------------+-----------+------+-----+-------------------+-------+
| Field       | Type      | Null | Key | Default           | Extra |
+-------------+-----------+------+-----+-------------------+-------+
| order_id    | int(11)   | NO   | PRI | NULL              |       | * FOREIGN KEY
| staff_id    | int(11)   | NO   | PRI | NULL              |       | * FOREIGN KEY
| prev_status | char(1)   | NO   |     | NULL              |       | * previous order status
| curr_status | char(1)   | NO   |     | NULL              |       | * current order status
| otime       | timestamp | NO   |     | CURRENT_TIMESTAMP |       | * time of operation
+-------------+-----------+------+-----+-------------------+-------+


Initialisation (MySQL)
===================================================

CREATE TABLE IF NOT EXISTS staff
(
staff_id int NOT NULL AUTO_INCREMENT,
username varchar(20) NOT NULL,
password varchar(50) NOT NULL,
previlege char(1) NOT NULL,
realname varchar(30) NOT NULL,
contact varchar(10) NOT NULL,
reg_date timestamp DEFAULT CURRENT_TIMESTAMP,
de_count int NOT NULL DEFAULT 0,
PRIMARY KEY (staff_id)
);

CREATE TABLE IF NOT EXISTS products
(
product_id int NOT NULL AUTO_INCREMENT,
name varchar(50) NOT NULL,
price int NOT NULL,
available int,
PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS customers(
customer_id int NOT NULL AUTO_INCREMENT,
name varchar(30) NOT NULL,
contact varchar(10) NOT NULL,
address varchar(100) NOT NULL,
PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS orders
(
order_id int NOT NULL AUTO_INCREMENT,
tracking_id varchar(6) NOT NULL,
status char(1) NOT NULL,
created timestamp DEFAULT CURRENT_TIMESTAMP,
de_accept datetime,
de_estimate datetime,
de_staff int,
customer_id int,
PRIMARY KEY (order_id),
FOREIGN KEY (de_staff) REFERENCES staff(staff_id),
FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);


CREATE TABLE IF NOT EXISTS items
(
order_id int NOT NULL,
product_id int NOT NULL,
qty int NOT NULL,
total int NOT NULL,
PRIMARY KEY (order_id, product_id),
FOREIGN KEY (order_id) REFERENCES orders(order_id),
FOREIGN KEY (product_id) REFERENCES products(product_id)
);

CREATE TABLE IF NOT EXISTS log
(
order_id int NOT NULL,
staff_id int NOT NULL,
prev_status char(1) NOT NULL,
curr_status char(1) NOT NULL,
otime timestamp DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (order_id, staff_id),
FOREIGN KEY (order_id) REFERENCES orders(order_id),
FOREIGN KEY (staff_id) REFERENCES staffs(staff_id)
);


TEST VALUES
=========================================
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('aaa','111','d','ABB','94609879');
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('bbb','111','d','BCC','94609879');
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('ccc','111','d','CDD','94609879');
INSERT INTO staff (username, password, previlege, realname, contact) VALUES ('ddd','111','d','DEE','94609879');

INSERT INTO products (name, price) VALUES ('Vac1','10');
INSERT INTO products (name, price) VALUES ('Vac2','20');
INSERT INTO products (name, price) VALUES ('Vac3','30');
INSERT INTO products (name, price) VALUES ('Vac4','40');

INSERT INTO customers (name, contact, address) VALUES (
	'pspencil',
	'12345678',
	'61 Kampong Arang Road'
);

INSERT INTO orders(tracking_id,status,de_staff,customer_id) VALUES (
	"ABCDEF",
	"r",
	(SELECT staff_id FROM staff WHERE username='aaa'),
	(SELECT customer_id FROM customers WHERE name='pspencil')
);

INSERT INTO items(order_id, product_id, qty,total) VALUES (
	(SELECT order_id FROM orders WHERE order_id = 1),
	(SELECT product_id FROM products WHERE product_id = 1),
	10,
	100
);

INSERT INTO items(order_id, product_id, qty,total) VALUES (
	(SELECT order_id FROM orders WHERE order_id = 1),
	(SELECT product_id FROM products WHERE product_id = 2),
	10,
	200
);

INSERT INTO items(order_id, product_id, qty,total) VALUES (
	(SELECT order_id FROM orders WHERE order_id = 2),
	(SELECT product_id FROM products WHERE product_id = 1),
	10,
	100
);

SELECT items.* FROM orders, items
WHERE orders.order_id = 1 and items.order_id = 1;

//Undelivered
SELECT orders.order_id, orders.tracking_id, orders.status, orders.customer_id, orders.de_staff, 
staff.realname, items.product_id, items.qty, items.total, customers.name, 
products.name AS product_name
FROM orders 
INNER JOIN items ON orders.order_id=items.order_id 
INNER JOIN customers ON orders.customer_id=customers.customer_id 
INNER JOIN staff ON orders.de_staff=staff.staff_id
INNER JOIN products ON items.product_id = products.product_id
WHERE orders.status='r' OR orders.status='p'
ORDER BY orders.order_id


















